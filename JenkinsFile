pipeline {
    agent {
        docker {
            image 'python:3.11-slim'
            args '--user root' // Run container as root
        }
    }

    environment {
        REPO_NAME = 'IA_DevSecOps'
        VENV_DIR = 'venv'
    }

    stages {
        stage('Install Dependencies') {
            steps {
                script {
                    sh '''
                    apt-get update && apt-get install -y git \
                        libssl-dev libffi-dev libsqlite3-dev libbz2-dev \
                        build-essential zlib1g-dev libreadline-dev libncursesw5-dev xz-utils tk-dev \
                        libgdbm-dev libnss3-dev uuid-dev
                    '''
                }
            }
        }

        stage('Clone Repository') {
            steps {
                script {
                    sh '''
                    rm -rf ${REPO_NAME} && git clone https://github.com/YoussefElbadouri/${REPO_NAME}.git
                    '''
                }
            }
        }

        stage('Setup Python Virtual Environment') {
            steps {
                script {
                    sh '''
                    python3 -m venv ${VENV_DIR} && source ${VENV_DIR}/bin/activate

                    pip install --upgrade pip setuptools wheel
                    pip install --no-cache-dir requests dockerfile-parse

                    if [ -f ${REPO_NAME}/requirements.txt ]; then
                        pip install --no-cache-dir -r ${REPO_NAME}/requirements.txt
                    fi
                    '''
                }
            }
        }

        stage('Execute Python Scripts') {
            steps {
                script {
                    sh '''
                    source ${VENV_DIR}/bin/activate

                    for script in extraction.py analyze_dockerfile.py analyze_terraform.py analyze_k8s.py; do
                        if [ -f "${REPO_NAME}/$script" ]; then
                            echo "▶ Running $script..."
                            python3 ${REPO_NAME}/$script
                        else
                            echo "⚠️ Warning: $script not found!"
                        fi
                    done
                    '''
                }
            }
        }
    }

    post {
        always {
            script {
                sh '''
                rm -rf ${REPO_NAME} ${VENV_DIR}
                '''
            }
        }
    }
}
