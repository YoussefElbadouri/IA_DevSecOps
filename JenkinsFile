pipeline {
    agent {
        docker {
            image 'python:3.11-slim'
            args '--user root'  // Exécute le conteneur en root
        }
    }

    environment {
        VENV_DIR = 'venv' // Variable pour éviter la répétition
        REPO_NAME = 'IA_DevSecOps' // Nom du dépôt
    }

    stages {
        stage('Cloner le dépôt') {
            steps {
                script {
                    sh '''
                    rm -rf ${REPO_NAME}
                    git clone https://github.com/YoussefElbadouri/${REPO_NAME}.git
                    '''
                }
            }
        }

        stage('Configurer l\'environnement Python') {
            steps {
                script {
                    sh '''
                    python3 -m venv ${VENV_DIR}
                    source ${VENV_DIR}/bin/activate

                    pip install --upgrade pip

                    # Vérifier SSL
                    python3 -c "import ssl; print(ssl.OPENSSL_VERSION)" || echo "⚠️ Erreur SSL détectée"

                    # Installation des dépendances
                    if [ -f ${REPO_NAME}/requirements.txt ]; then
                        pip install --no-cache-dir -r ${REPO_NAME}/requirements.txt
                    else
                        echo "⚠️ requirements.txt introuvable, installation de requests..."
                        pip install --no-cache-dir requests
                    fi
                    '''
                }
            }
        }

        stage('Exécuter extraction.py') {
            steps {
                script {
                    sh '''
                    source ${VENV_DIR}/bin/activate
                    python3 ${REPO_NAME}/extraction.py || echo "⚠️ Erreur lors de l'exécution de extraction.py"
                    '''
                }
            }
        }

        stage('Analyser Dockerfile') {
            steps {
                script {
                    sh '''
                    source ${VENV_DIR}/bin/activate
                    python3 ${REPO_NAME}/analyze_dockerfile.py || echo "⚠️ Erreur lors de l'analyse du Dockerfile"
                    '''
                }
            }
        }

        stage('Analyser Terraform') {
            steps {
                script {
                    sh '''
                    source ${VENV_DIR}/bin/activate
                    python3 ${REPO_NAME}/analyze_terraform.py || echo "⚠️ Erreur lors de l'analyse Terraform"
                    '''
                }
            }
        }

        stage('Analyser Kubernetes YAML') {
            steps {
                script {
                    sh '''
                    source ${VENV_DIR}/bin/activate
                    python3 ${REPO_NAME}/analyze_k8s.py || echo "⚠️ Erreur lors de l'analyse Kubernetes YAML"
                    '''
                }
            }
        }
    }

    post {
        always {
            script {
                sh '''
                rm -rf ${REPO_NAME} ${VENV_DIR}
                '''
            }
        }
    }
}
