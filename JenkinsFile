pipeline {
    agent {
        docker {
            image 'python:3.11-slim'
        }
    }

    stages {
        stage('Installer les dépendances système') {
            steps {
                script {
                    sh '''
                    apt-get update && apt-get install -y git
                    '''
                }
            }
        }

        stage('Cloner le dépôt') {
            steps {
                script {
                    sh '''
                    rm -rf IA_DevSecOps
                    git clone https://github.com/YoussefElbadouri/IA_DevSecOps.git
                    '''
                }
            }
        }

        stage('Configurer l\'environnement Python') {
            steps {
                script {
                    sh '''
                    apt-get install -y libssl-dev libffi-dev libsqlite3-dev libbz2-dev \
                        build-essential zlib1g-dev libreadline-dev libncursesw5-dev xz-utils tk-dev \
                        libgdbm-dev libnss3-dev uuid-dev

                    python3 -m ensurepip --default-pip
                    python3 -m venv venv
                    . venv/bin/activate

                    python3 -c "import ssl; print(ssl.OPENSSL_VERSION)" || echo "Erreur SSL détectée"

                    pip install --no-cache-dir --force-reinstall cryptography requests

                    if [ -f IA_DevSecOps/requirements.txt ]; then
                        pip install --no-cache-dir -r IA_DevSecOps/requirements.txt
                    else
                        echo "⚠️ requirements.txt introuvable, installation de requests..."
                        pip install --no-cache-dir requests
                    fi
                    '''
                }
            }
        }

        stage('Exécuter extraction.py') {
            steps {
                script {
                    sh '''
                    . venv/bin/activate
                    python3 IA_DevSecOps/extraction.py
                    '''
                }
            }
        }

        stage('Analyser Dockerfile') {
            steps {
                script {
                    sh '''
                    . venv/bin/activate
                    python3 IA_DevSecOps/analyze_dockerfile.py
                    '''
                }
            }
        }

        stage('Analyser Terraform') {
            steps {
                script {
                    sh '''
                    . venv/bin/activate
                    python3 IA_DevSecOps/analyze_terraform.py
                    '''
                }
            }
        }

        stage('Analyser Kubernetes YAML') {
            steps {
                script {
                    sh '''
                    . venv/bin/activate
                    python3 IA_DevSecOps/analyze_k8s.py
                    '''
                }
            }
        }
    }

    post {
        always {
            script {
                sh '''
                rm -rf IA_DevSecOps
                '''
            }
        }
    }
}
