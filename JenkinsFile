pipeline {
    agent {
        docker {
            image 'python:3.11-slim'
            args '--user root' // Exécute le conteneur avec les privilèges root
        }
    }

    environment {
        REPO_NAME = 'IA_DevSecOps'
        VENV_DIR = 'venv'
    }

    stages {
        stage('Installer Git') {
            steps {
                script {
                    sh '''
                    apt-get update && apt-get install -y git
                    '''
                }
            }
        }

        stage('Cloner le dépôt') {
            steps {
                script {
                    sh '''
                    rm -rf ${REPO_NAME}
                    git clone https://github.com/YoussefElbadouri/${REPO_NAME}.git
                    '''
                }
            }
        }

        stage('Configurer l\'environnement Python') {
            steps {
                script {
                    sh '''
                    apt-get install -y libssl-dev libffi-dev libsqlite3-dev libbz2-dev \
                        build-essential zlib1g-dev libreadline-dev libncursesw5-dev xz-utils tk-dev \
                        libgdbm-dev libnss3-dev uuid-dev

                    python3 -m venv ${VENV_DIR}
                    . ${VENV_DIR}/bin/activate

                    pip install --upgrade pip
                    pip install --no-cache-dir requests dockerfile-parse

                    if [ -f ${REPO_NAME}/requirements.txt ]; then
                        pip install --no-cache-dir -r ${REPO_NAME}/requirements.txt
                    fi
                    '''
                }
            }
        }

        stage('Exécuter extraction.py') {
            steps {
                script {
                    sh '''
                    . ${VENV_DIR}/bin/activate
                    if [ -f ${REPO_NAME}/extraction.py ]; then
                        python3 ${REPO_NAME}/extraction.py
                    else
                        echo "⚠️ Fichier extraction.py introuvable"
                        exit 1
                    fi
                    '''
                }
            }
        }

        stage('Analyser Dockerfile') {
            steps {
                script {
                    sh '''
                    . ${VENV_DIR}/bin/activate
                    if [ -f ${REPO_NAME}/analyze_dockerfile.py ]; then
                        python3 ${REPO_NAME}/analyze_dockerfile.py
                    else
                        echo "⚠️ Fichier analyze_dockerfile.py introuvable"
                        exit 1
                    fi
                    '''
                }
            }
        }

        stage('Analyser Terraform') {
            steps {
                script {
                    sh '''
                    . ${VENV_DIR}/bin/activate
                    if [ -f ${REPO_NAME}/analyze_terraform.py ]; then
                        python3 ${REPO_NAME}/analyze_terraform.py
                    else
                        echo "⚠️ Fichier analyze_terraform.py introuvable"
                        exit 1
                    fi
                    '''
                }
            }
        }

        stage('Analyser Kubernetes YAML') {
            steps {
                script {
                    sh '''
                    . ${VENV_DIR}/bin/activate
                    if [ -f ${REPO_NAME}/analyze_k8s.py ]; then
                        python3 ${REPO_NAME}/analyze_k8s.py
                    else
                        echo "⚠️ Fichier analyze_k8s.py introuvable"
                        exit 1
                    fi
                    '''
                }
            }
        }
    }

    post {
        always {
            script {
                sh '''
                rm -rf ${REPO_NAME} ${VENV_DIR}
                '''
            }
        }
    }
}
